import { PostHog } from 'posthog-node';
/**
 * Initialize PostHog analytics
 */
export declare function initAnalytics(): PostHog | null;
/**
 * Track a command execution
 */
export declare function trackCommand(commandName: string, options?: Record<string, any>, additionalProps?: Record<string, any>): void;
/**
 * Track command success
 */
export declare function trackCommandSuccess(commandName: string, duration?: number, additionalProps?: Record<string, any>): void;
/**
 * Track command error
 */
export declare function trackCommandError(commandName: string, error: Error | string, duration?: number, additionalProps?: Record<string, any>): void;
/**
 * Shutdown analytics and flush any pending events
 */
export declare function shutdownAnalytics(): Promise<void>;
/**
 * Wrapper function to track command execution with timing
 */
export declare function withAnalytics<T extends any[], R>(commandName: string, fn: (...args: T) => R | Promise<R>, optionsExtractor?: (...args: T) => Record<string, any>): (...args: T) => Promise<R>;
//# sourceMappingURL=analytics.d.ts.map